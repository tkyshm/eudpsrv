%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% %% ex: ts=4 sw=4 ft=erlang et
%% %% This is a sample rebar.conf file that shows examples of some of rebar's
%% %% options.
%%
%% %% == Core ==
%%
%% %% Extend list of always recursive commands
{recursive_cmds, []}.

%% Check required ERTS or OTP release version
%%{require_erts_vsn, ".*"}.
%%{require_otp_vsn, ".*"}.
%%{require_min_otp_vsn, ".*"}.

%% == Erlang Compiler ==

%% Erlang files to compile before the rest. Rebar automatically compiles
%% parse_transforms and custom behaviours before anything other than the files
%% in this list.
%{erl_first_files, ["src/mymib1.erl", "src/mymib2.erl"]}.

%% Erlang compiler options
{erl_opts, [no_debug_info,
            {i, "include"},
            {src_dirs, ["src", "src2", "src3"]},
            {platform_define, "^[0-9]+", namespaced_types},
            {parse_transform, lager_transform}, 
            {lager_truncation_size, 1024}
           ]}.

{sub_dirs, ["rel"]}.


%% == EUnit ==

 %% Options for eunit:test()
 {eunit_opts, []}.
 %% Additional compile options for eunit. erl_opts is also used
 {eunit_compile_opts, []}.
 %% Same as erl_first_files, but used only when running 'eunit'
 {eunit_first_files, []}.
%% == Cover ==
%% Whether to enable coverage reporting. Default is `false'
{cover_enabled, false}.
%% Whether to print coverage report to console. Default is `false'
{cover_print_enabled, false}.
%% Whether to export coverage report to file. Default is `false'
{cover_export_enabled, true}.



{xref_checks, [fail_on_warning, undefined_function_calls]}.

{edoc_opts, [{doclet, edown_doclet}, 
             {dialyzer_specs, all}, 
             {report_missing_type, true},
             {report_type_mismatch, true}, 
             {pretty_print, erl_pp},
             {preprocess, true}]}.

{validate_app_modules, true}.

%% Dependency
{deps,
 [
  { rebar, ".*", {git, "git://github.com/rebar/rebar.git", {branch, "master"}}, [raw]},
  { lager, ".*", {git, "git://github.com/basho/lager.git", {branch, "master"}}}
 ]
}.
